#ifndef GL_VERSION_1_4
#define GL_VERSION_1_4 1

enum
{
	GL_BLEND_DST_RGB = 0x80C8,
	GL_BLEND_SRC_RGB = 0x80C9,
	GL_BLEND_DST_ALPHA = 0x80CA,
	GL_BLEND_SRC_ALPHA = 0x80CB,
	GL_POINT_FADE_THRESHOLD_SIZE = 0x8128,
	GL_DEPTH_COMPONENT16 = 0x81A5,
	GL_DEPTH_COMPONENT24 = 0x81A6,
	GL_DEPTH_COMPONENT32 = 0x81A7,
	GL_MIRRORED_REPEAT = 0x8370,
	GL_MAX_TEXTURE_LOD_BIAS = 0x84FD,
	GL_TEXTURE_LOD_BIAS = 0x8501,
	GL_INCR_WRAP = 0x8507,
	GL_DECR_WRAP = 0x8508,
	GL_TEXTURE_DEPTH_SIZE = 0x884A,
	GL_TEXTURE_COMPARE_MODE = 0x884C,
	GL_TEXTURE_COMPARE_FUNC = 0x884D,
	GL_BLEND_COLOR = 0x8005,
	GL_BLEND_EQUATION = 0x8009,
	GL_CONSTANT_COLOR = 0x8001,
	GL_ONE_MINUS_CONSTANT_COLOR = 0x8002,
	GL_CONSTANT_ALPHA = 0x8003,
	GL_ONE_MINUS_CONSTANT_ALPHA = 0x8004,
	GL_FUNC_ADD = 0x8006,
	GL_FUNC_REVERSE_SUBTRACT = 0x800B,
	GL_FUNC_SUBTRACT = 0x800A,
	GL_MIN = 0x8007,
	GL_MAX = 0x8008,
};

typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount);
typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC)(GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC)(GLenum pname, const GLfloat *params);
typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC)(GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC)(GLenum pname, const GLint *params);
typedef void (APIENTRYP PFNGLBLENDCOLORPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC)(GLenum mode);

GLAPI PFNGLBLENDFUNCSEPARATEPROC glBlendFuncSeparate;
GLAPI PFNGLMULTIDRAWARRAYSPROC glMultiDrawArrays;
GLAPI PFNGLMULTIDRAWELEMENTSPROC glMultiDrawElements;
GLAPI PFNGLPOINTPARAMETERFPROC glPointParameterf;
GLAPI PFNGLPOINTPARAMETERFVPROC glPointParameterfv;
GLAPI PFNGLPOINTPARAMETERIPROC glPointParameteri;
GLAPI PFNGLPOINTPARAMETERIVPROC glPointParameteriv;
GLAPI PFNGLBLENDCOLORPROC glBlendColor;
GLAPI PFNGLBLENDEQUATIONPROC glBlendEquation;

#endif
