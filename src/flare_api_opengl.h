#ifndef APIENTRY
	#ifdef FLARE_SYSTEM_WINDOWS
		#define APIENTRY WINAPI
	#else
		#define APIENTRY
	#endif
#endif

#define APIENTRYP APIENTRY*
//#define GLAPI

static_assert(sizeof(uint8_t) == 1);
static_assert(sizeof(uint16_t) == 2);
static_assert(sizeof(uint32_t) == 4);
static_assert(sizeof(uint64_t) == 8);
static_assert(sizeof(float) == 4);
static_assert(sizeof(double) == 8);

typedef char GLchar;
typedef uint8_t GLboolean;
typedef int8_t GLbyte;
typedef uint8_t GLubyte;
typedef int16_t GLshort;
typedef uint16_t GLushort;
typedef int32_t GLint;
typedef uint32_t GLuint;
typedef int32_t GLfixed;
typedef int64_t GLint64;
typedef uint64_t GLuint64;
typedef int32_t GLsizei;
typedef int32_t GLenum;
typedef intptr_t GLintptr;
typedef intptr_t GLsizeiptr;
typedef intptr_t GLsync;
typedef int32_t GLbitfield;
typedef int16_t GLhalf;
typedef float GLfloat;
typedef float GLclampf;
typedef double GLdouble;
typedef double GLclampd;
typedef void (APIENTRY *GLDEBUGPROC)(GLenum, GLenum, GLuint, GLenum, GLsizei, const GLchar*, const void*);
typedef void (APIENTRY *GLDEBUGPROCARB)(GLenum, GLenum, GLuint, GLenum, GLsizei, const GLchar*, const void*);
typedef void (APIENTRY *GLDEBUGPROCKHR)(GLenum, GLenum, GLuint, GLenum, GLsizei, const GLchar*, const void*);
typedef void (APIENTRY *GLDEBUGPROCAMD)(GLuint, GLenum, GLenum, GLsizei, const GLchar*, void*);

#if 0
enum gl_core_enum
{
	GL_VERSION_ES_CL_1_0 = 1,
	GL_VERSION_ES_CM_1_1 = 1,
	GL_VERSION_ES_CL_1_1 = 1,
	GL_CLIP_PLANE0 = 0x3000,
	GL_CLIP_PLANE1 = 0x3001,
	GL_CLIP_PLANE2 = 0x3002,
	GL_CLIP_PLANE3 = 0x3003,
	GL_CLIP_PLANE4 = 0x3004,
	GL_CLIP_PLANE5 = 0x3005,
	GL_FOG = 0x0B60,
	GL_LIGHTING = 0x0B50,
	GL_ALPHA_TEST = 0x0BC0,
	GL_POINT_SMOOTH = 0x0B10,
	GL_COLOR_MATERIAL = 0x0B57,
	GL_NORMALIZE = 0x0BA1,
	GL_RESCALE_NORMAL = 0x803A,
	GL_NORMAL_ARRAY = 0x8075,
	GL_COLOR_ARRAY = 0x8076,
	GL_TEXTURE_COORD_ARRAY = 0x8078,
	GL_EXP = 0x0800,
	GL_EXP2 = 0x0801,
	GL_FOG_DENSITY = 0x0B62,
	GL_FOG_START = 0x0B63,
	GL_FOG_END = 0x0B64,
	GL_FOG_MODE = 0x0B65,
	GL_FOG_COLOR = 0x0B66,
	GL_CURRENT_COLOR = 0x0B00,
	GL_CURRENT_NORMAL = 0x0B02,
	GL_CURRENT_TEXTURE_COORDS = 0x0B03,
	GL_POINT_SIZE_MIN = 0x8126,
	GL_POINT_SIZE_MAX = 0x8127,
	GL_POINT_DISTANCE_ATTENUATION = 0x8129,
	GL_ALIASED_POINT_SIZE_RANGE = 0x846D,
	GL_SHADE_MODEL = 0x0B54,
	GL_MATRIX_MODE = 0x0BA0,
	GL_MODELVIEW_STACK_DEPTH = 0x0BA3,
	GL_PROJECTION_STACK_DEPTH = 0x0BA4,
	GL_TEXTURE_STACK_DEPTH = 0x0BA5,
	GL_MODELVIEW_MATRIX = 0x0BA6,
	GL_PROJECTION_MATRIX = 0x0BA7,
	GL_TEXTURE_MATRIX = 0x0BA8,
	GL_ALPHA_TEST_FUNC = 0x0BC1,
	GL_ALPHA_TEST_REF = 0x0BC2,
	GL_MAX_LIGHTS = 0x0D31,
	GL_MAX_CLIP_PLANES = 0x0D32,
	GL_MAX_MODELVIEW_STACK_DEPTH = 0x0D36,
	GL_MAX_PROJECTION_STACK_DEPTH = 0x0D38,
	GL_MAX_TEXTURE_STACK_DEPTH = 0x0D39,
	GL_MAX_TEXTURE_UNITS = 0x84E2,
	GL_RED_BITS = 0x0D52,
	GL_GREEN_BITS = 0x0D53,
	GL_BLUE_BITS = 0x0D54,
	GL_ALPHA_BITS = 0x0D55,
	GL_DEPTH_BITS = 0x0D56,
	GL_STENCIL_BITS = 0x0D57,
	GL_VERTEX_ARRAY_SIZE = 0x807A,
	GL_VERTEX_ARRAY_TYPE = 0x807B,
	GL_VERTEX_ARRAY_STRIDE = 0x807C,
	GL_NORMAL_ARRAY_TYPE = 0x807E,
	GL_NORMAL_ARRAY_STRIDE = 0x807F,
	GL_COLOR_ARRAY_SIZE = 0x8081,
	GL_COLOR_ARRAY_TYPE = 0x8082,
	GL_COLOR_ARRAY_STRIDE = 0x8083,
	GL_TEXTURE_COORD_ARRAY_SIZE = 0x8088,
	GL_TEXTURE_COORD_ARRAY_TYPE = 0x8089,
	GL_TEXTURE_COORD_ARRAY_STRIDE = 0x808A,
	GL_VERTEX_ARRAY_POINTER = 0x808E,
	GL_NORMAL_ARRAY_POINTER = 0x808F,
	GL_COLOR_ARRAY_POINTER = 0x8090,
	GL_TEXTURE_COORD_ARRAY_POINTER = 0x8092,
	GL_PERSPECTIVE_CORRECTION_HINT = 0x0C50,
	GL_POINT_SMOOTH_HINT = 0x0C51,
	GL_FOG_HINT = 0x0C54,
	GL_GENERATE_MIPMAP_HINT = 0x8192,
	GL_LIGHT_MODEL_AMBIENT = 0x0B53,
	GL_LIGHT_MODEL_TWO_SIDE = 0x0B52,
	GL_AMBIENT = 0x1200,
	GL_DIFFUSE = 0x1201,
	GL_SPECULAR = 0x1202,
	GL_POSITION = 0x1203,
	GL_SPOT_DIRECTION = 0x1204,
	GL_SPOT_EXPONENT = 0x1205,
	GL_SPOT_CUTOFF = 0x1206,
	GL_CONSTANT_ATTENUATION = 0x1207,
	GL_LINEAR_ATTENUATION = 0x1208,
	GL_QUADRATIC_ATTENUATION = 0x1209,
	GL_EMISSION = 0x1600,
	GL_SHININESS = 0x1601,
	GL_AMBIENT_AND_DIFFUSE = 0x1602,
	GL_MODELVIEW = 0x1700,
	GL_PROJECTION = 0x1701,
	GL_LUMINANCE = 0x1909,
	GL_LUMINANCE_ALPHA = 0x190A,
	GL_FLAT = 0x1D00,
	GL_SMOOTH = 0x1D01,
	GL_MODULATE = 0x2100,
	GL_DECAL = 0x2101,
	GL_ADD = 0x0104,
	GL_TEXTURE_ENV_MODE = 0x2200,
	GL_TEXTURE_ENV_COLOR = 0x2201,
	GL_TEXTURE_ENV = 0x2300,
	GL_GENERATE_MIPMAP = 0x8191,
	GL_CLIENT_ACTIVE_TEXTURE = 0x84E1,
	GL_LIGHT0 = 0x4000,
	GL_LIGHT1 = 0x4001,
	GL_LIGHT2 = 0x4002,
	GL_LIGHT3 = 0x4003,
	GL_LIGHT4 = 0x4004,
	GL_LIGHT5 = 0x4005,
	GL_LIGHT6 = 0x4006,
	GL_LIGHT7 = 0x4007,
	GL_VERTEX_ARRAY_BUFFER_BINDING = 0x8896,
	GL_NORMAL_ARRAY_BUFFER_BINDING = 0x8897,
	GL_COLOR_ARRAY_BUFFER_BINDING = 0x8898,
	GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING = 0x889A,
	GL_SUBTRACT = 0x84E7,
	GL_COMBINE = 0x8570,
	GL_COMBINE_RGB = 0x8571,
	GL_COMBINE_ALPHA = 0x8572,
	GL_RGB_SCALE = 0x8573,
	GL_ADD_SIGNED = 0x8574,
	GL_INTERPOLATE = 0x8575,
	GL_CONSTANT = 0x8576,
	GL_PRIMARY_COLOR = 0x8577,
	GL_PREVIOUS = 0x8578,
	GL_OPERAND0_RGB = 0x8590,
	GL_OPERAND1_RGB = 0x8591,
	GL_OPERAND2_RGB = 0x8592,
	GL_OPERAND0_ALPHA = 0x8598,
	GL_OPERAND1_ALPHA = 0x8599,
	GL_OPERAND2_ALPHA = 0x859A,
	GL_ALPHA_SCALE = 0x0D1C,
	GL_SRC0_RGB = 0x8580,
	GL_SRC1_RGB = 0x8581,
	GL_SRC2_RGB = 0x8582,
	GL_SRC0_ALPHA = 0x8588,
	GL_SRC2_ALPHA = 0x858A,
	GL_DOT3_RGB = 0x86AE,
	GL_DOT3_RGBA = 0x86AF,
	GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 0x8CD9,
	GL_MULTISAMPLE_LINE_WIDTH_RANGE = 0x9381,
	GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY = 0x9382,
	GL_MULTIPLY = 0x9294,
	GL_SCREEN = 0x9295,
	GL_OVERLAY = 0x9296,
	GL_DARKEN = 0x9297,
	GL_LIGHTEN = 0x9298,
	GL_COLORDODGE = 0x9299,
	GL_COLORBURN = 0x929A,
	GL_HARDLIGHT = 0x929B,
	GL_SOFTLIGHT = 0x929C,
	GL_DIFFERENCE = 0x929E,
	GL_EXCLUSION = 0x92A0,
	GL_HSL_HUE = 0x92AD,
	GL_HSL_SATURATION = 0x92AE,
	GL_HSL_COLOR = 0x92AF,
	GL_HSL_LUMINOSITY = 0x92B0,
	GL_PRIMITIVE_BOUNDING_BOX = 0x92BE,
	GL_COMPRESSED_RGBA_ASTC_4x4 = 0x93B0,
	GL_COMPRESSED_RGBA_ASTC_5x4 = 0x93B1,
	GL_COMPRESSED_RGBA_ASTC_5x5 = 0x93B2,
	GL_COMPRESSED_RGBA_ASTC_6x5 = 0x93B3,
	GL_COMPRESSED_RGBA_ASTC_6x6 = 0x93B4,
	GL_COMPRESSED_RGBA_ASTC_8x5 = 0x93B5,
	GL_COMPRESSED_RGBA_ASTC_8x6 = 0x93B6,
	GL_COMPRESSED_RGBA_ASTC_8x8 = 0x93B7,
	GL_COMPRESSED_RGBA_ASTC_10x5 = 0x93B8,
	GL_COMPRESSED_RGBA_ASTC_10x6 = 0x93B9,
	GL_COMPRESSED_RGBA_ASTC_10x8 = 0x93BA,
	GL_COMPRESSED_RGBA_ASTC_10x10 = 0x93BB,
	GL_COMPRESSED_RGBA_ASTC_12x10 = 0x93BC,
	GL_COMPRESSED_RGBA_ASTC_12x12 = 0x93BD,
	GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4 = 0x93D0,
	GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4 = 0x93D1,
	GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5 = 0x93D2,
	GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5 = 0x93D3,
	GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6 = 0x93D4,
	GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5 = 0x93D5,
	GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6 = 0x93D6,
	GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8 = 0x93D7,
	GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5 = 0x93D8,
	GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6 = 0x93D9,
	GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8 = 0x93DA,
	GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10 = 0x93DB,
	GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10 = 0x93DC,
	GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12 = 0x93DD,
	GL_CONTEXT_ROBUST_ACCESS = 0x90F3
};
#endif
