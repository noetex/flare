#ifndef GL_VERSION_3_2
#define GL_VERSION_3_2 1
GLAPI int GLAD_GL_VERSION_3_2;

enum
{
	GL_CONTEXT_CORE_PROFILE_BIT = 0x00000001,
	GL_CONTEXT_COMPATIBILITY_PROFILE_BIT = 0x00000002,
	GL_LINES_ADJACENCY = 0x000A,
	GL_LINE_STRIP_ADJACENCY = 0x000B,
	GL_TRIANGLES_ADJACENCY = 0x000C,
	GL_TRIANGLE_STRIP_ADJACENCY = 0x000D,
	GL_PROGRAM_POINT_SIZE = 0x8642,
	GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS = 0x8C29,
	GL_FRAMEBUFFER_ATTACHMENT_LAYERED = 0x8DA7,
	GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS = 0x8DA8,
	GL_GEOMETRY_SHADER = 0x8DD9,
	GL_GEOMETRY_VERTICES_OUT = 0x8916,
	GL_GEOMETRY_INPUT_TYPE = 0x8917,
	GL_GEOMETRY_OUTPUT_TYPE = 0x8918,
	GL_MAX_GEOMETRY_UNIFORM_COMPONENTS = 0x8DDF,
	GL_MAX_GEOMETRY_OUTPUT_VERTICES = 0x8DE0,
	GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS = 0x8DE1,
	GL_MAX_VERTEX_OUTPUT_COMPONENTS = 0x9122,
	GL_MAX_GEOMETRY_INPUT_COMPONENTS = 0x9123,
	GL_MAX_GEOMETRY_OUTPUT_COMPONENTS = 0x9124,
	GL_MAX_FRAGMENT_INPUT_COMPONENTS = 0x9125,
	GL_CONTEXT_PROFILE_MASK = 0x9126,
	GL_DEPTH_CLAMP = 0x864F,
	GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION = 0x8E4C,
	GL_FIRST_VERTEX_CONVENTION = 0x8E4D,
	GL_LAST_VERTEX_CONVENTION = 0x8E4E,
	GL_PROVOKING_VERTEX = 0x8E4F,
	GL_TEXTURE_CUBE_MAP_SEAMLESS = 0x884F,
	GL_MAX_SERVER_WAIT_TIMEOUT = 0x9111,
	GL_OBJECT_TYPE = 0x9112,
	GL_SYNC_CONDITION = 0x9113,
	GL_SYNC_STATUS = 0x9114,
	GL_SYNC_FLAGS = 0x9115,
	GL_SYNC_FENCE = 0x9116,
	GL_SYNC_GPU_COMMANDS_COMPLETE = 0x9117,
	GL_UNSIGNALED = 0x9118,
	GL_SIGNALED = 0x9119,
	GL_ALREADY_SIGNALED = 0x911A,
	GL_TIMEOUT_EXPIRED = 0x911B,
	GL_CONDITION_SATISFIED = 0x911C,
	GL_WAIT_FAILED = 0x911D,
	GL_TIMEOUT_IGNORED = 0xFFFFFFFFFFFFFFFF,
	GL_SYNC_FLUSH_COMMANDS_BIT = 0x00000001,
	GL_SAMPLE_POSITION = 0x8E50,
	GL_SAMPLE_MASK = 0x8E51,
	GL_SAMPLE_MASK_VALUE = 0x8E52,
	GL_MAX_SAMPLE_MASK_WORDS = 0x8E59,
	GL_TEXTURE_2D_MULTISAMPLE = 0x9100,
	GL_PROXY_TEXTURE_2D_MULTISAMPLE = 0x9101,
	GL_TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9102,
	GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9103,
	GL_TEXTURE_BINDING_2D_MULTISAMPLE = 0x9104,
	GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY = 0x9105,
	GL_TEXTURE_SAMPLES = 0x9106,
	GL_TEXTURE_FIXED_SAMPLE_LOCATIONS = 0x9107,
	GL_SAMPLER_2D_MULTISAMPLE = 0x9108,
	GL_INT_SAMPLER_2D_MULTISAMPLE = 0x9109,
	GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE = 0x910A,
	GL_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910B,
	GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910C,
	GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910D,
	GL_MAX_COLOR_TEXTURE_SAMPLES = 0x910E,
	GL_MAX_DEPTH_TEXTURE_SAMPLES = 0x910F,
	GL_MAX_INTEGER_SAMPLES = 0x9110,
};

typedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXPROC)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);
typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex);
typedef void (APIENTRYP PFNGLPROVOKINGVERTEXPROC)(GLenum mode);
typedef GLsync (APIENTRYP PFNGLFENCESYNCPROC)(GLenum condition, GLbitfield flags);
typedef GLboolean (APIENTRYP PFNGLISSYNCPROC)(GLsync sync);
typedef void (APIENTRYP PFNGLDELETESYNCPROC)(GLsync sync);
typedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (APIENTRYP PFNGLWAITSYNCPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (APIENTRYP PFNGLGETINTEGER64VPROC)(GLenum pname, GLint64 *data);
typedef void (APIENTRYP PFNGLGETSYNCIVPROC)(GLsync sync, GLenum pname, GLsizei count, GLsizei *length, GLint *values);
typedef void (APIENTRYP PFNGLGETINTEGER64I_VPROC)(GLenum target, GLuint index, GLint64 *data);
typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC)(GLenum target, GLenum pname, GLint64 *params);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVPROC)(GLenum pname, GLuint index, GLfloat *val);
typedef void (APIENTRYP PFNGLSAMPLEMASKIPROC)(GLuint maskNumber, GLbitfield mask);

GLAPI PFNGLDRAWELEMENTSBASEVERTEXPROC glDrawElementsBaseVertex;
GLAPI PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC glDrawRangeElementsBaseVertex;
GLAPI PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC glDrawElementsInstancedBaseVertex;
GLAPI PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC glMultiDrawElementsBaseVertex;
GLAPI PFNGLPROVOKINGVERTEXPROC glProvokingVertex;
GLAPI PFNGLFENCESYNCPROC glFenceSync;
GLAPI PFNGLISSYNCPROC glIsSync;
GLAPI PFNGLDELETESYNCPROC glDeleteSync;
GLAPI PFNGLCLIENTWAITSYNCPROC glClientWaitSync;
GLAPI PFNGLWAITSYNCPROC glWaitSync;
GLAPI PFNGLGETINTEGER64VPROC glGetInteger64v;
GLAPI PFNGLGETSYNCIVPROC glGetSynciv;
GLAPI PFNGLGETINTEGER64I_VPROC glGetInteger64i_v;
GLAPI PFNGLGETBUFFERPARAMETERI64VPROC glGetBufferParameteri64v;
GLAPI PFNGLFRAMEBUFFERTEXTUREPROC glFramebufferTexture;
GLAPI PFNGLTEXIMAGE2DMULTISAMPLEPROC glTexImage2DMultisample;
GLAPI PFNGLTEXIMAGE3DMULTISAMPLEPROC glTexImage3DMultisample;
GLAPI PFNGLGETMULTISAMPLEFVPROC glGetMultisamplefv;
GLAPI PFNGLSAMPLEMASKIPROC glSampleMaski;

#endif
